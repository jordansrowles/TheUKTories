// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheUKTories.Services.Data.EFCore;

#nullable disable

namespace TheUKTories.Migrations
{
    [DbContext(typeof(SqlServerDataContext))]
    partial class SqlServerDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.Covid.CovidGovResponse", b =>
                {
                    b.Property<int>("CovidGovResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CovidGovResponseId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CovidGovResponseId");

                    b.ToTable("CovidGovResponses");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.Covid.CovidGovResponseSource", b =>
                {
                    b.Property<int>("CovidGovResponseSourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CovidGovResponseSourceId"), 1L, 1);

                    b.Property<int>("CovidGovResponseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CovidGovResponseSourceId");

                    b.HasIndex("CovidGovResponseId");

                    b.ToTable("CovidGovResponseSources");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.Covid.GovPPEContract", b =>
                {
                    b.Property<int>("GovPPEContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GovPPEContractId"), 1L, 1);

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GovPPEContractCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GovPPEContractId");

                    b.HasIndex("GovPPEContractCompanyId");

                    b.ToTable("CovidGovContracts");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.Covid.GovPPEContractCompany", b =>
                {
                    b.Property<int>("GovPPEContractCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GovPPEContractCompanyId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Founded")
                        .HasColumnType("datetime2");

                    b.Property<string>("MainPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GovPPEContractCompanyId");

                    b.ToTable("CovidGovContractCompanies");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.FacistTactic", b =>
                {
                    b.Property<int>("FacistTacticId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacistTacticId"), 1L, 1);

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subtitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacistTacticId");

                    b.ToTable("FacistTactics");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.People.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"), 1L, 1);

                    b.Property<string>("CurrentTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsProfilePublic")
                        .HasColumnType("bit");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoliticalParty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImageBlobUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.People.PersonGeneral", b =>
                {
                    b.Property<int>("PersonGeneralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonGeneralId"), 1L, 1);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonGeneralId");

                    b.HasIndex("PersonId");

                    b.ToTable("PeopleGeneral");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.People.PersonGeneralSource", b =>
                {
                    b.Property<int>("PersonGeneralSourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonGeneralSourceId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonGeneralId")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonGeneralSourceId");

                    b.HasIndex("PersonGeneralId");

                    b.ToTable("PersonGeneralSources");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.People.PersonQuote", b =>
                {
                    b.Property<int>("PersonQuoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonQuoteId"), 1L, 1);

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Quote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonQuoteId");

                    b.HasIndex("PersonId");

                    b.ToTable("PeopleQuotes");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.People.PersonQuoteSource", b =>
                {
                    b.Property<int>("PersonQuoteSourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonQuoteSourceId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonQuoteId")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonQuoteSourceId");

                    b.HasIndex("PersonQuoteId");

                    b.ToTable("PersonQuoteSources");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.UKAusterityMeasure", b =>
                {
                    b.Property<int>("UKAusterityMeasureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UKAusterityMeasureId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UKAusterityMeasureId");

                    b.ToTable("UKAusterityMeasures");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.UKAusterityMeasureSource", b =>
                {
                    b.Property<int>("UKAusterityMeasureSourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UKAusterityMeasureSourceId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UKAusterityMeasureId")
                        .HasColumnType("int");

                    b.HasKey("UKAusterityMeasureSourceId");

                    b.HasIndex("UKAusterityMeasureId");

                    b.ToTable("UKAusterityMeasuresSources");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.Covid.CovidGovResponseSource", b =>
                {
                    b.HasOne("TheUKTories.Services.Data.EFCore.Models.Covid.CovidGovResponse", "CovidGovResponse")
                        .WithMany("CovidGovResponseSources")
                        .HasForeignKey("CovidGovResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CovidGovResponse");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.Covid.GovPPEContract", b =>
                {
                    b.HasOne("TheUKTories.Services.Data.EFCore.Models.Covid.GovPPEContractCompany", "Company")
                        .WithMany("Contracts")
                        .HasForeignKey("GovPPEContractCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.People.PersonGeneral", b =>
                {
                    b.HasOne("TheUKTories.Services.Data.EFCore.Models.People.Person", "Person")
                        .WithMany("GeneralList")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.People.PersonGeneralSource", b =>
                {
                    b.HasOne("TheUKTories.Services.Data.EFCore.Models.People.PersonGeneral", "PersonGeneral")
                        .WithMany("SourceItems")
                        .HasForeignKey("PersonGeneralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonGeneral");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.People.PersonQuote", b =>
                {
                    b.HasOne("TheUKTories.Services.Data.EFCore.Models.People.Person", "Person")
                        .WithMany("Quotes")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.People.PersonQuoteSource", b =>
                {
                    b.HasOne("TheUKTories.Services.Data.EFCore.Models.People.PersonQuote", "PersonQuote")
                        .WithMany("SourceItems")
                        .HasForeignKey("PersonQuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonQuote");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.UKAusterityMeasureSource", b =>
                {
                    b.HasOne("TheUKTories.Services.Data.EFCore.Models.UKAusterityMeasure", "UKAusterityMeasure")
                        .WithMany("SourceItems")
                        .HasForeignKey("UKAusterityMeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UKAusterityMeasure");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.Covid.CovidGovResponse", b =>
                {
                    b.Navigation("CovidGovResponseSources");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.Covid.GovPPEContractCompany", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.People.Person", b =>
                {
                    b.Navigation("GeneralList");

                    b.Navigation("Quotes");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.People.PersonGeneral", b =>
                {
                    b.Navigation("SourceItems");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.People.PersonQuote", b =>
                {
                    b.Navigation("SourceItems");
                });

            modelBuilder.Entity("TheUKTories.Services.Data.EFCore.Models.UKAusterityMeasure", b =>
                {
                    b.Navigation("SourceItems");
                });
#pragma warning restore 612, 618
        }
    }
}
